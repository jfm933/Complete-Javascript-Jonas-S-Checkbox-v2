export const CompleteJavascriptJonasS = [
  `Course Structure and Projects | JavaScript ğŸ”¥ | Lecture 001`,
  `Watch Before You Start! | JavaScript ğŸ”¥ | Lecture 002`,
  `Setting Up Our Code Editor | JavaScript ğŸ”¥ | Lecture 003`,
  `Section 2 | Fundamental part -1 Intro | JavaScript ğŸ”¥ | Lecture 004`,
  `Hello World! | JavaScript ğŸ”¥ | Lecture 005`,
  `A Brief Introduction to JavaScript ğŸ”¥ | Lecture 006`,
  `Linking a JavaScript File | JavaScript ğŸ”¥ | Lecture 007`,
  `Values and Variables | JavaScript ğŸ”¥  | Lecture 008`,
  `Data Types | JavaScript ğŸ”¥ | Lecture 09`,
  `let, const and var | JavaScript ğŸ”¥ | Lecture 010`,
  `Basic Operators | JavaScript ğŸ”¥ | Lecture 011`,
  `Operator Precedence | JavaScript ğŸ”¥ | Lecture 012`,
  `Coding Challenge #1 | JavaScript ğŸ”¥ | Lecture 013`,
  `Strings and Template Literals | JavaScript ğŸ”¥ | Lecture 014`,
  `Taking Decisions: if else Statements | JavaScript ğŸ”¥ | Lecture 015`,
  `Coding Challenge #2 | JavaScript ğŸ”¥ | Lecture 016`,
  `Type Conversion and Coercion | JavaScript ğŸ”¥ | Lecture 017`,
  `Truthy and Falsy Values | JavaScript ğŸ”¥ | Lecture 018`,
  `Equality Operators == vs === | JavaScript ğŸ”¥ | Lecture 019`,
  `Boolean Logic | JavaScript ğŸ”¥ | Lecture 020`,
  `Logical Operators | JavaScript ğŸ”¥ | Lecture 021`,
  `Coding Challenge #3 |  JavaScript ğŸ”¥ | Lecture 022`,
  `The switch Statement | JavaScript ğŸ”¥ | Lecture 023`,
  `Statements and Expressions | JavaScript ğŸ”¥ | Lecture 024`,
  `The Conditional (Ternary) Operator | JavaScript ğŸ”¥ | Lecture 025`,
  `Coding Challenge #4 | JavaScript ğŸ”¥ | Lecture 026`,
  `JavaScript Releases: ES5, ES6+ and ESNext | JavaScript ğŸ”¥ | Lecture 027`,
  `Section Intro | Fundamental Part 2 | JavaScript ğŸ”¥ | Lecture 028`,
  `Activating Strict Mode | JavaScript ğŸ”¥ | Lecture 029`,
  `Functions | JavaScript ğŸ”¥ | Lecture 030`,
  `Function Declarations vs Expressions | JavaScript ğŸ”¥ | Lecture 031`,
  `Arrow Functions | JavaScript ğŸ”¥ | Lecture 032`,
  `Functions Calling Other Functions | JavaScript ğŸ”¥ | Lecture 033`,
  `Reviewing Functions | JavaScript ğŸ”¥ | Lecture 034`,
  `Coding Challenge #5 | JavaScript ğŸ”¥ | Lecture 035`,
  `Introduction to Arrays | JavaScript ğŸ”¥ | Lecture 036`,
  `Basic Array Operations (Methods) | JavaScript ğŸ”¥ | Lecture 037`,
  `Coding Challenge #6 | JavaScript ğŸ”¥ | Lecture 038`,
  `Introduction to Objects | JavaScript ğŸ”¥ | Lecture 039`,
  `Dot vs Bracket Notation | JavaScript ğŸ”¥ | Lecture 040`,
  `Object Methods | JavaScript ğŸ”¥ | Lecture 041`,
  `Coding Challenge #7 | JavaScript ğŸ”¥ | Lecture 042`,
  `Iteration The for Loop | JavaScript ğŸ”¥ | Lecture 043`,
  `Looping Arrays, Breaking and Continuing | JavaScript ğŸ”¥ | Lecture 044`,
  `Looping Backwards and Loops in Loops | JavaScript ğŸ”¥ | Lecture 045`,
  `The while Loop | JavaScript ğŸ”¥ | Lecture 046`,
  `Coding Challenge #8 | JavaScript ğŸ”¥ | Lecture 047`,
  `Pathways and Section Roadmaps | JavaScript ğŸ”¥ | Lecture 048`,
  `Section 5 Intro | Developer Skills & Editor Setup | JavaScript ğŸ”¥ | Lecture 049`,
  `Setting up Prettier and VS Code | JavaScript ğŸ”¥ | Lecture 050`,
  `Installing Node.js and Setting Up a Dev Environment | JavaScript ğŸ”¥ | Lecture 051`,
  `Learning How to Code | JavaScript ğŸ”¥ | Lecture 052`,
  `How to Think Like a Developer: Become a Problem Solver! | JavaScript ğŸ”¥ | Lecture 053`,
  `Using Google, StackOverflow and MDN | JavaScript ğŸ”¥ | Lecture 054`,
  `Debugging (Fixing Errors) | JavaScript ğŸ”¥ | Lecture 055`,
  `Debugging with the Console and Breakpoints | JavaScript ğŸ”¥ | Lecture 056`,
  `Coding Challenge #9 | JavaScript ğŸ”¥ | Lecture 057`,
  `Section 6  Intro | HTML & CSS Crash Course [OPTIONAL] | JavaScript ğŸ”¥ | Lecture 058`,
  `Basic HTML Structure and Elements | JavaScript ğŸ”¥ | Lecture 059`,
  `Attributes, Classes and IDs | JavaScript ğŸ”¥ | Lecture 060`,
  `Basic Styling with CSS | JavaScript ğŸ”¥ | Lecture 061`,
  `Introduction to the CSS Box Model | JavaScript ğŸ”¥ | Lecture 062`,
  `Section Intro | JavaScript in the Browser_ DOM and Events Fundamentals | JavaScript ğŸ”¥ | Lecture 063`,
  `PROJECT #1: Guess My Number!. | JavaScript ğŸ”¥ | Lecture 064`,
  `What's the DOM and DOM Manipulation | JavaScript ğŸ”¥ | Lecture 065`,
  `Selecting and Manipulating Elements | JavaScript ğŸ”¥ | Lecture 066`,
  `Handling Click Events | JavaScript ğŸ”¥ | Lecture 067`,
  `Implementing the Game Logic | JavaScript ğŸ”¥ | Lecture 068`,
  `Manipulating CSS Styles | JavaScript ğŸ”¥ | Lecture 069`,
  `Coding Challenge #10 | JavaScript ğŸ”¥ | Lecture 070`,
  `Implementing Highscores | JavaScript ğŸ”¥ | Lecture 071`,
  `Refactoring Our Code: The DRY Principle | JavaScript ğŸ”¥ | Lecture 072`,
  `PROJECT #2: Modal Window | JavaScript ğŸ”¥ | Lecture 073`,
  `Working With Classes | JavaScript ğŸ”¥ | Lecture 074`,
  `Handling an "Esc" Keypress Event | JavaScript ğŸ”¥ | Lecture 075`,
  `PROJECT #3: Pig Game | JavaScript ğŸ”¥ | Lecture 076`,
  `Rolling the Dice | JavaScript ğŸ”¥ | Lecture 077`,
  `Switching the Active Player | JavaScript ğŸ”¥ | Lecture 078`,
  `Holding Current Score | JavaScript ğŸ”¥ | Lecture 079`,
  `Resetting the Game | JavaScript ğŸ”¥ | Lecture 080`,
  `Section 8 Intro | How JavaScript Works Behind the Scenes | JavaScript ğŸ”¥ | Lecture 081`,
  `An High-Level Overview of JavaScript | JavaScript ğŸ”¥ | Lecture 082`,
  `The JavaScript Engine and Runtime | JavaScript ğŸ”¥ | Lecture 083`,
  `Execution Contexts and The Call Stack | JavaScript ğŸ”¥ | Lecture 084`,
  `Scope and The Scope Chain | JavaScript ğŸ”¥ | Lecture 085`,
  `Scoping in Practice | JavaScript ğŸ”¥ | Lecture 086`,
  `Variable Environment: Hoisting and The TDZ | JavaScript ğŸ”¥ | Lecture 087`,
  `Hoisting and TDZ in Practice | JavaScript ğŸ”¥ | Lecture 088`,
  `The this Keyword | JavaScript ğŸ”¥ | Lecture 089`,
  `The this Keyword in Practice | JavaScript ğŸ”¥ | Lecture 090`,
  `Regular Functions vs Arrow Functions | JavaScript ğŸ”¥ | Lecture 091`,
  `Primitives vs Objects (Primitive vs Reference Types) | JavaScript ğŸ”¥ | Lecture 092`,
  `Primitives vs Objects in Practice | JavaScript ğŸ”¥ | Lecture 093`,
  `Section 9 Intro | Data Structures Modern Operators and Strings | JavaScript ğŸ”¥ | Lecture 094`,
  `Destructuring Arrays | JavaScript ğŸ”¥ | Lecture 095`,
  `Destructuring Objects | JavaScript ğŸ”¥ | Lecture 096`,
  `The Spread Operator (...) | JavaScript ğŸ”¥ | Lecture 097`,
  `Rest Pattern and Parameters | JavaScript ğŸ”¥ | Lecture 098`,
  `Short Circuiting (&& and II) | JavaScript ğŸ”¥ | Lecture 099`,
  `The Nullish Coalescing Operator (??) | JavaScript ğŸ”¥  | Lecture 100`,
  `Logical Assignment Operators | JavaScript ğŸ”¥ | Lecture 101`,
  `Coding Challenge #11 | JavaScript ğŸ”¥  | Lecture 102`,
  `Looping Arrays: The for-of Loop | JavaScript ğŸ”¥ | Lecture 103`,
  `Enhanced Object Literals | JavaScript ğŸ”¥ | Lecture 104`,
  `Optional Chaining (?.) | JavaScript ğŸ”¥ | Lecture 105`,
  `Looping Objects: Object Keys, Values, and Entries | JavaScript ğŸ”¥ | Lecture 106`,
  `Coding Challenge #12 | JavaScript ğŸ”¥ | Lecture 107`,
  `Sets | JavaScript ğŸ”¥ | Lecture 108`,
  `Maps: Fundamentals | JavaScript ğŸ”¥  | Lecture 109`,
  `Maps: Iteration | JavaScript ğŸ”¥ | Lecture 110`,
  `Summary: Which Data Structure to Use | JavaScript ğŸ”¥ | Lecture 111`,
  `Coding Challenge #13 |  JavaScript ğŸ”¥ | Lecture 112`,
  `Working With Strings - Part 1 | JavaScript ğŸ”¥ | Lecture 113`,
  `Working With Strings - Part 2 | JavaScript ğŸ”¥ | Lecture 114`,
  `Working With Strings - Part 3 | JavaScript ğŸ”¥ | Lecture 115`,
  `Coding Challenge #14 | JavaScript ğŸ”¥ | Lecture 116`,
  `String Methods Practice | JavaScript ğŸ”¥ | Lecture 117`,
  `Section Intro | A Closer Look at Functions | JavaScript ğŸ”¥ | Lecture 118`,
  `Default Parameters | JavaScript ğŸ”¥ | Lecture 119`,
  `How Passing Arguments Works: Value vs Reference | JavaScript ğŸ”¥  | Lecture 120`,
  `First-Class and Higher-Order Functions | JavaScript ğŸ”¥ | Lecture 121`,
  `Functions Accepting Callback Functions | JavaScript ğŸ”¥ | Lecture 122`,
  `Functions Returning Functions | JavaScript ğŸ”¥ | Lecture 123`,
  `The call and apply Methods | JavaScript ğŸ”¥ | Lecture 124`,
  `The bind Method | JavaScript ğŸ”¥ | Lecture 125`,
  `Coding Challenge #15 |  JavaScript ğŸ”¥ | Lecture 126`,
  `Immediately Invoked Function Expressions (IIFE) | JavaScript ğŸ”¥ | Lecture 127`,
  `Closures | JavaScript ğŸ”¥ | Lecture 128`,
  `More Closure Examples | JavaScript ğŸ”¥ | Lecture 129`,
  `Coding Challenge #16  | JavaScript ğŸ”¥ | Lecture 130`,
  `Section Intro 11 | Working With Arrays | JavaScript ğŸ”¥ | Lecture 131`,
  `Simple Array Methods | JavaScript ğŸ”¥ | Lecture 132`,
  `The new at Method | JavaScript ğŸ”¥ | Lecture 133`,
  `Looping Arrays_ forEach | JavaScript ğŸ”¥ | Lecture 134`,
  `forEach With Maps and Sets | JavaScript ğŸ”¥ | Lecture 135`,
  `PROJECT: "Bankist" App | JavaScript ğŸ”¥ | Lecture 136`,
  `Creating DOM Elements | JavaScript ğŸ”¥ | Lecture 137`,
  `Coding Challenge #17 | JavaScript ğŸ”¥ | Lecture 138`,
  `Data Transformations_ map, filter, reduce | JavaScript ğŸ”¥ | Lecture 139`,
  `The map Method | JavaScript ğŸ”¥ | Lecture 140`,
  `Computing Usernames | JavaScript ğŸ”¥ | Lecture 141`,
  `The filter Method | JavaScript ğŸ”¥ | Lecture 142`,
  `The reduce Method | JavaScript ğŸ”¥ | Lecture 143`,
  `Coding Challenge #18 | JavaScript ğŸ”¥ | Lecture 144`,
  `The Magic of Chaining Methods | JavaScript ğŸ”¥ | Lecture 145`,
  `Coding Challenge #19 | JavaScript ğŸ”¥ | Lecture 146`,
  `The find Method | JavaScript ğŸ”¥ | Lecture 147`,
  `Implementing Login | JavaScript ğŸ”¥ | Lecture 148`,
  `Implementing Transfers | JavaScript ğŸ”¥ | Lecture 149`,
  `The findIndex Method | JavaScript ğŸ”¥ | Lecture 150`,
  `Some and Every | JavaScript ğŸ”¥ | Lecture 151`,
  `flat and flatMap | JavaScript ğŸ”¥ | Lecture 152`,
  `Sorting Arrays | JavaScript ğŸ”¥ | Lecture 153`,
  `More Ways of Creating and Filling Arrays | JavaScript ğŸ”¥ | Lecture 154`,
  `Summary: Which Array Method to Use | JavaScript ğŸ”¥ | Lecture 155`,
  `Array Methods Practice | JavaScript ğŸ”¥ | Lecture 156`,
  `Coding Challenge #20 | JavaScript ğŸ”¥ | Lecture 157`,
  `Section 12 Intro | Numbers, Dates, Intl and Timers | JavaScript ğŸ”¥ | Lecture 158`,
  `Converting and Checking Numbers | JavaScript ğŸ”¥ | Lecture 159`,
  `Math and Rounding | JavaScript ğŸ”¥ | Lecture 160`,
  `The Remainder Operator | JavaScript ğŸ”¥ | Lecture 161`,
  `Numeric Separators | JavaScript ğŸ”¥ | Lecture 162`,
  `Working with BigInt | JavaScript ğŸ”¥ | Lecture 163`,
  `Creating Dates | JavaScript ğŸ”¥ | Lecture 164`,
  `Adding Dates to "Bankist" App | JavaScript ğŸ”¥ | Lecture 165`,
  `Operations With Dates | JavaScript ğŸ”¥ | Lecture 166`,
  `Internationalizing Dates (Intl) | JavaScript ğŸ”¥ | Lecture 167`,
  `Internationalizing Numbers (Intl) | JavaScript ğŸ”¥ | Lecture 168`,
  `Timers: setTimeout and setInterval | JavaScript ğŸ”¥ | Lecture 169`,
  `Implementing a Countdown Timer | JavaScript ğŸ”¥ | Lecture 170`,
  `Section 13 Intro | Advanced DOM and Events | JavaScript ğŸ”¥ | Lecture 171`,
  `PROJECT_ _Bankist_ Website | JavaScript ğŸ”¥ | Lecture 172`,
  `How the DOM Really Works | JavaScript ğŸ”¥ | Lecture 173`,
  `Selecting, Creating, and Deleting Elements | JavaScript ğŸ”¥ | Lecture 174`,
  `Styles, Attributes and Classes | JavaScript ğŸ”¥ | Lecture 175`,
  `Implementing Smooth Scrolling | JavaScript ğŸ”¥ | Lecture 176`,
  `Types of Events and Event Handlers | JavaScript ğŸ”¥ | Lecture 177`,
  `Event Propagation_ Bubbling and Capturing | JavaScript ğŸ”¥ | Lecture 178`,
  `Event Propagation in Practice | JavaScript ğŸ”¥ | Lecture 179`,
  `Event Delegation_ Implementing Page Navigation | JavaScript ğŸ”¥ | Lecture 180`,
  `DOM Traversing | JavaScript ğŸ”¥ | Lecture 181`,
  `Building a Tabbed Component | JavaScript ğŸ”¥ | Lecture 182`,
  `Passing Arguments to Event Handlers | JavaScript ğŸ”¥ | Lecture 183`,
  `Implementing a Sticky Navigation_ The Scroll Event | JavaScript ğŸ”¥ | Lecture 184`,
  `A Better Way_ The Intersection Observer API  JavaScript ğŸ”¥ | Lecture 185`,
  `Revealing Elements on Scroll | JavaScript ğŸ”¥ | Lecture 186`,
  `Lazy Loading Images | JavaScript ğŸ”¥ | Lecture 187`,
  `Building a Slider Component_ Part 1 | JavaScript ğŸ”¥ | Lecture 188`,
  `Building a Slider Component_ Part 2 | JavaScript ğŸ”¥ | Lecture 189`,
  `Lifecycle DOM Events | JavaScript ğŸ”¥ | Lecture 190`,
  `Efficient Script Loading_ defer and async | JavaScript ğŸ”¥ | Lecture 191`,
  `Section 14 Intro | Object-Oriented Programming (OOP) With JavaScript ğŸ”¥ | Lecture 192`,
  `What is Object-Oriented Programming JavaScript ğŸ”¥ | Lecture 193`,
  `OOP in JavaScript ğŸ”¥ | Lecture 194`,
  `Constructor Functions and the new Operator | JavaScript ğŸ”¥ | Lecture 195`,
  `Prototypes | JavaScript ğŸ”¥ | Lecture 196`,
  `Prototypal Inheritance and The Prototype Chain | JavaScript ğŸ”¥ | Lecture 197`,
  `Prototypal Inheritance on Built-In Objects | JavaScript ğŸ”¥ | Lecture 198`,
  `Coding Challenge #21 | JavaScript ğŸ”¥ | Lecture 199`,
  `ES6 Classes | JavaScript ğŸ”¥ | Lecture 200`,
];
